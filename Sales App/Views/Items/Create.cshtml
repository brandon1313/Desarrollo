@model Sales_App.Models.Items

@{
    ViewBag.Title = "Nuevo Producto";
}

<div class="contents">
    <div class="content__container">
        <p class="content__container__text">
            <i class="fa fa-smile"></i>
        </p>

        <ul class="content__container__list">
            <li class="content__container__list__item">Nuevo Item</li>
            <li class="content__container__list__item">Agregar</li>
            <li class="content__container__list__item">Nuevo Item</li>
            <li class="content__container__list__item">Agregar</li>

        </ul>
    </div>
</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="container-fluid">
    <div class="card shadow mb-4">
        <br />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.NameItem, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.NameItem, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NameItem, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Crear" class="btn btn-success" />
                <span class="icon text-white-50">
                    <i class="fas fa-check"></i>
                </span>
            </div>
        </div>
    </div>
    <a href="@Url.Action("Index","Items",new {  })" class="btn btn-info btn-icon-split">
        <span class="icon text-white-50">
            <i class="fas fa-backward"></i>
        </span>
        <span class="text">Regresar</span>

    </a>
</div>
    
}





<a class="scroll-to-top rounded" href="#page-top">
    <i class="fas fa-angle-up"></i>
</a>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
